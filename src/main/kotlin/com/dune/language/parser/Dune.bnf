{
  parserClass="com.dune.language.parser.DuneParser"

  implements='com.dune.language.psi.api.DuneElement'
  extends='com.dune.language.psi.api.DuneElementImpl'

  psiClassPrefix="Dune"
  psiImplClassSuffix="Impl"
  psiPackage="com.dune.language.psi"
  psiImplPackage="com.dune.language.psi.impl"
  psiImplUtilClass="com.dune.language.psi.OCamlImplUtils"

  elementTypeHolderClass="com.dune.language.psi.DuneTypes"
  elementTypeClass="com.dune.language.psi.api.DuneElementType"
  tokenTypeClass="com.dune.language.psi.api.DuneTokenType"

  tokens = [
    COMMENT = "COMMENT"
    ATOM_VALUE = "ATOM_VALUE"
    STRING_VALUE = "STRING_VALUE"
  ]
}

// https://dune.readthedocs.io/en/stable/reference/lexical-conventions.html

implementation ::= { items }*

private items ::= list | COMMENT

atom ::= ATOM_VALUE

string ::= STRING_VALUE

// Lists are sequences of values enclosed by parentheses.
// Lists can be empty, for instance: ().
list ::= '(' { atom | string | list }* ')'