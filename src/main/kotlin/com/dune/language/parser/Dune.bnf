{
  parserClass="com.dune.language.parser.DuneParser"

  implements='com.dune.language.psi.api.DuneElement'
  extends='com.dune.language.psi.api.DuneElementImpl'

  psiClassPrefix="Dune"
  psiImplClassSuffix="Impl"
  psiPackage="com.dune.language.psi"
  psiImplPackage="com.dune.language.psi.impl"

  elementTypeHolderClass="com.dune.language.psi.DuneTypes"
  elementTypeClass="com.dune.language.psi.api.DuneElementType"
  tokenTypeClass="com.dune.language.psi.api.DuneTokenType"

  generateTokenAccessors=true

  tokens = [
    LPAREN = "("
    RPAREN = ")"
    COMMENT = "COMMENT"
    ATOM = "ATOM"
    STRING = "STRING"
    WHITE_SPACE = "WHITE_SPACE"
  ]
}

// https://dune.readthedocs.io/en/stable/reference/lexical-conventions.html
// Since whitespace are separators, they are not considered as blank whitespace anymore
implementation ::= { items }*

private items ::= list | COMMENT | WHITE_SPACE

// Lists are sequences of values enclosed by parentheses.
// Lists can be empty, for instance: ().
list ::= LPAREN [WHITE_SPACE] [value { WHITE_SPACE argument }*] [WHITE_SPACE] RPAREN
{
    pin=1
    implements="com.dune.language.psi.api.DuneNamedOwnerElement"
    extends="com.dune.language.psi.ext.DuneNamedOwnerElementImpl"
}

argument ::= value
{
    implements="com.dune.language.psi.api.DuneNamedOwnerElement"
    extends="com.dune.language.psi.ext.DuneNamedOwnerElementImpl"
}

value ::= ATOM | STRING | list