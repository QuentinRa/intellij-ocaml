package com.or.lang;

import com.or.lang.core.stub.OclStubBasedElementTypes;
import com.or.lang.core.type.ORCompositeElementType;
import com.or.lang.core.type.ORCompositeType;
import com.or.lang.core.type.ORTokenElementType;

public interface OCamlTypes {
    // Stub element types
    ORCompositeType C_CLASS_DECLARATION = (ORCompositeType) OclStubBasedElementTypes.C_CLASS_DECLARATION;
    ORCompositeType C_EXCEPTION_DECLARATION = (ORCompositeType) OclStubBasedElementTypes.C_EXCEPTION_DECLARATION;
    ORCompositeType C_EXTERNAL_DECLARATION = (ORCompositeType) OclStubBasedElementTypes.C_EXTERNAL_DECLARATION;
    ORCompositeType C_FAKE_MODULE = (ORCompositeType) OclStubBasedElementTypes.C_FAKE_MODULE;
    ORCompositeType C_FUN_PARAM = (ORCompositeType) OclStubBasedElementTypes.C_FUN_PARAM;
    ORCompositeType C_FUNCTOR_DECLARATION = (ORCompositeType) OclStubBasedElementTypes.C_FUNCTOR_DECLARATION;
    ORCompositeType C_FUNCTOR_PARAM = (ORCompositeType) OclStubBasedElementTypes.C_FUNCTOR_PARAM;
    ORCompositeType C_INCLUDE = (ORCompositeType) OclStubBasedElementTypes.C_INCLUDE;
    ORCompositeType C_LET_DECLARATION = (ORCompositeType) OclStubBasedElementTypes.C_LET_DECLARATION;
    ORCompositeType C_MODULE_DECLARATION = (ORCompositeType) OclStubBasedElementTypes.C_MODULE_DECLARATION;
    ORCompositeType C_OBJECT_FIELD = (ORCompositeType) OclStubBasedElementTypes.C_OBJECT_FIELD;
    ORCompositeType C_OPEN = (ORCompositeType) OclStubBasedElementTypes.C_OPEN;
    ORCompositeType C_RECORD_FIELD = (ORCompositeType) OclStubBasedElementTypes.C_RECORD_FIELD;
    ORCompositeType C_TYPE_DECLARATION = (ORCompositeType) OclStubBasedElementTypes.C_TYPE_DECLARATION;
    ORCompositeType C_VAL_DECLARATION = (ORCompositeType) OclStubBasedElementTypes.C_VAL_DECLARATION;
    ORCompositeType C_VARIANT_DECLARATION = (ORCompositeType) OclStubBasedElementTypes.C_VARIANT_DECLARATION;

    // Composite element types

    ORCompositeType C_ANNOTATION = new ORCompositeElementType("C_ANNOTATION");
    ORCompositeType C_ASSERT_STMT = new ORCompositeElementType("C_ASSERT_STMT");
    ORCompositeType C_BINARY_CONDITION = new ORCompositeElementType("C_BIN_CONDITION");
    ORCompositeType C_CLASS_CONSTR = new ORCompositeElementType("C_CLASS_CONSTR");
    ORCompositeType C_CLASS_PARAMS = new ORCompositeElementType("C_CLASS_PARAMS");
    ORCompositeType C_CLASS_FIELD = new ORCompositeElementType("C_CLASS_FIELD");
    ORCompositeType C_CLASS_METHOD = new ORCompositeElementType("C_CLASS_METHOD");
    ORCompositeType C_CONSTRAINTS = new ORCompositeElementType("C_CONSTRAINTS");
    ORCompositeType C_CONSTRAINT = new ORCompositeElementType("C_CONSTRAINT");
    ORCompositeType C_CUSTOM_OPERATOR = new ORCompositeElementType("C_CUSTOM_OPERATOR");
    ORCompositeType C_DECONSTRUCTION = new ORCompositeElementType("C_DECONSTRUCTION");
    ORCompositeType C_DEFAULT_VALUE = new ORCompositeElementType("C_DEFAULT_VALUE");
    ORCompositeType C_DIRECTIVE = new ORCompositeElementType("C_DIRECTIVE");
    ORCompositeType C_DO_LOOP = new ORCompositeElementType("C_DO_LOOP");
    ORCompositeType C_LOWER_IDENTIFIER = new ORCompositeElementType("C_LOWER_IDENTIFIER");
    ORCompositeType C_UPPER_IDENTIFIER = new ORCompositeElementType("C_UPPER_IDENTIFIER");
    ORCompositeType C_FUN_CALL_PARAMS = new ORCompositeElementType("C_FUN_CALL_PARAMS");
    ORCompositeType C_FUN_EXPR = new ORCompositeElementType("C_FUN_EXPR");
    ORCompositeType C_FUN_PARAMS = new ORCompositeElementType("C_FUN_PARAMS");
    ORCompositeType C_FUN_BODY = new ORCompositeElementType("C_FUN_BODY");
    ORCompositeType C_FUNCTOR_BINDING = new ORCompositeElementType("C_FUNCTOR_BINDING");
    ORCompositeType C_FUNCTOR_CALL = new ORCompositeElementType("C_FUNCTOR_CALL");
    ORCompositeType C_FUNCTOR_PARAMS = new ORCompositeElementType("C_FUNCTOR_PARAMS");
    ORCompositeType C_FUNCTOR_RESULT = new ORCompositeElementType("C_FUNCTOR_RESULT");
    ORCompositeType C_INTERPOLATION_EXPR = new ORCompositeElementType("C_INTERPOLATION_EXPR");
    ORCompositeType C_INTERPOLATION_PART = new ORCompositeElementType("C_INTERPOLATION_PART");
    ORCompositeType C_INTERPOLATION_REF = new ORCompositeElementType("C_INTERPOLATION_REF");
    ORCompositeType C_JS_OBJECT = new ORCompositeElementType("C_JS_OBJECT");
    ORCompositeType C_LET_ATTR = new ORCompositeElementType("C_LET_ATTR");
    ORCompositeType C_LET_BINDING = new ORCompositeElementType("C_LET_BINDING");
    ORCompositeType C_LOCAL_OPEN = new ORCompositeElementType("C_LOCAL_OPEN");
    ORCompositeType C_LOWER_BOUND_CONSTRAINT = new ORCompositeElementType("C_LOWER_BOUND_CONSTRAINT");
    ORCompositeType C_TYPE_VARIABLE = new ORCompositeElementType("C_TYPE_VARIABLE");
    ORCompositeType C_LOWER_SYMBOL = new ORCompositeElementType("C_LOWER_SYMBOL");
    ORCompositeType C_MACRO_EXPR = new ORCompositeElementType("C_MACRO_EXPR");
    ORCompositeType C_MACRO_NAME = new ORCompositeElementType("C_MACRO_NAME");
    ORCompositeType C_MACRO_RAW_BODY = new ORCompositeElementType("C_MACRO_RAW_BODY");
    ORCompositeType C_MODULE_TYPE = new ORCompositeElementType("C_MODULE_TYPE");
    ORCompositeType C_ML_INTERPOLATOR = new ORCompositeElementType("C_ML_INTERPOLATOR");
    ORCompositeType C_MATCH_EXPR = new ORCompositeElementType("C_MATCH_EXPR");
    ORCompositeType C_NAMED_PARAM = new ORCompositeElementType("C_NAMED_PARAM");
    ORCompositeType C_OBJECT = new ORCompositeElementType("C_OBJECT");
    ORCompositeType C_OPTION = new ORCompositeElementType("C_OPTION");
    ORCompositeType C_PARAMETERS = new ORCompositeElementType("C_PARAMETERS");
    ORCompositeType C_PATTERN_MATCH_BODY = new ORCompositeElementType("C_PATTERN_MATCH_BODY");
    ORCompositeType C_PATTERN_MATCH_EXPR = new ORCompositeElementType("C_PATTERN_MATCH_EXPR");
    ORCompositeType C_RECORD_EXPR = new ORCompositeElementType("C_RECORD_EXPR");
    ORCompositeType C_SIG_EXPR = new ORCompositeElementType("C_SIG_EXPR");
    ORCompositeType C_SIG_ITEM = new ORCompositeElementType("C_SIG_ITEM");
    ORCompositeType C_TAG = new ORCompositeElementType("C_TAG");
    ORCompositeType C_TAG_BODY = new ORCompositeElementType("C_TAG_BODY");
    ORCompositeType C_TAG_CLOSE = new ORCompositeElementType("C_TAG_CLOSE");
    ORCompositeType C_TAG_PROP_VALUE = new ORCompositeElementType("C_TAG_PROP_VALUE");
    ORCompositeType C_TAG_PROPERTY = new ORCompositeElementType("C_TAG_PROPERTY");
    ORCompositeType C_TAG_START = new ORCompositeElementType("C_TAG_START");
    ORCompositeType C_TERNARY = new ORCompositeElementType("C_TERNARY");
    ORCompositeType C_TRY_EXPR = new ORCompositeElementType("C_TRY_EXPR");
    ORCompositeType C_TRY_BODY = new ORCompositeElementType("C_TRY_BODY");
    ORCompositeType C_TRY_HANDLER = new ORCompositeElementType("C_TRY_HANDLER");
    ORCompositeType C_TRY_HANDLERS = new ORCompositeElementType("C_TRY_HANDLERS");
    ORCompositeType C_TYPE_BINDING = new ORCompositeElementType("C_TYPE_BINDING");
    ORCompositeType C_UNIT = new ORCompositeElementType("C_UNIT");
    ORCompositeType C_UPPER_BOUND_CONSTRAINT = new ORCompositeElementType("C_UPPER_BOUND_CONSTRAINT");
    ORCompositeType C_DUMMY = new ORCompositeElementType("C_DUMMY");
    ORCompositeType C_VARIANT = new ORCompositeElementType("C_VARIANT");
    ORCompositeType C_VARIANT_CONSTRUCTOR = new ORCompositeElementType("C_VARIANT_CONSTRUCTOR");
    ORCompositeType C_IF = new ORCompositeElementType("C_IF");
    ORCompositeType C_IF_THEN_SCOPE = new ORCompositeElementType("C_IF_THEN_SCOPE");
    ORCompositeType C_SCOPED_EXPR = new ORCompositeElementType("C_SCOPED_EXPR");
    ORCompositeType C_SWITCH_EXPR = new ORCompositeElementType("C_SWITCH_EXPR");
    ORCompositeType C_UPPER_SYMBOL = new ORCompositeElementType("C_UPPER_SYMBOL");
    ORCompositeType C_STRUCT_EXPR = new ORCompositeElementType("C_STRUCT_EXPR");
    ORCompositeType C_MIXIN_FIELD = new ORCompositeElementType("C_MIXIN_FIELD");
    ORCompositeType C_WHILE = new ORCompositeElementType("C_WHILE");

    // Token element types

    ORTokenElementType AMPERSAND = new ORTokenElementType("&");
    ORTokenElementType AND = new ORTokenElementType("and");
    ORTokenElementType ANNOTATION = new ORTokenElementType("ANNOTATION");
    ORTokenElementType ARROW = new ORTokenElementType("=>");
    ORTokenElementType AS = new ORTokenElementType("as");
    ORTokenElementType ASR = new ORTokenElementType("asr");
    ORTokenElementType ASSERT = new ORTokenElementType("assert");
    ORTokenElementType AT_SIGN = new ORTokenElementType("@");
    ORTokenElementType AT_SIGN_2 = new ORTokenElementType("@@");
    ORTokenElementType AT_SIGN_3 = new ORTokenElementType("@@@");
    ORTokenElementType BACKTICK = new ORTokenElementType("`");
    ORTokenElementType BEGIN = new ORTokenElementType("begin");
    ORTokenElementType BOOL_VALUE = new ORTokenElementType("true");
    ORTokenElementType CARET = new ORTokenElementType("\\^");
    ORTokenElementType CHAR_VALUE = new ORTokenElementType("CHAR_VALUE");
    ORTokenElementType CLASS = new ORTokenElementType("class");
    ORTokenElementType COLON = new ORTokenElementType(":");
    ORTokenElementType COLON_EQ = new ORTokenElementType(":=");
    ORTokenElementType COLON_GT = new ORTokenElementType(":>");
    ORTokenElementType COMMA = new ORTokenElementType(",");
    ORTokenElementType CONSTRAINT = new ORTokenElementType("constraint");
    ORTokenElementType DIRECTIVE_ELIF = new ORTokenElementType("#elif");
    ORTokenElementType DIRECTIVE_ELSE = new ORTokenElementType("#else");
    ORTokenElementType DIRECTIVE_END = new ORTokenElementType("#end");
    ORTokenElementType DIRECTIVE_ENDIF = new ORTokenElementType("#endif");
    ORTokenElementType DIRECTIVE_IF = new ORTokenElementType("#if");
    ORTokenElementType DO = new ORTokenElementType("do");
    ORTokenElementType DOLLAR = new ORTokenElementType("$");
    ORTokenElementType DONE = new ORTokenElementType("done");
    ORTokenElementType DOT = new ORTokenElementType(".");
    ORTokenElementType DOTDOT = new ORTokenElementType("..");
    ORTokenElementType DOTDOTDOT = new ORTokenElementType("...");
    ORTokenElementType DOWNTO = new ORTokenElementType("downto");
    ORTokenElementType ELSE = new ORTokenElementType("else");
    ORTokenElementType END = new ORTokenElementType("end");
    ORTokenElementType ENDIF = new ORTokenElementType("endif");
    ORTokenElementType EQ = new ORTokenElementType("=");
    ORTokenElementType EQEQ = new ORTokenElementType("==");
    ORTokenElementType EQEQEQ = new ORTokenElementType("===");
    ORTokenElementType EXCEPTION = new ORTokenElementType("exception");
    ORTokenElementType EXCLAMATION_MARK = new ORTokenElementType("!");
    ORTokenElementType EXTERNAL = new ORTokenElementType("external");
    ORTokenElementType FLOAT_VALUE = new ORTokenElementType("FLOAT_VALUE");
    ORTokenElementType FOR = new ORTokenElementType("for");
    ORTokenElementType FUN = new ORTokenElementType("fun");
    ORTokenElementType FUNCTION = new ORTokenElementType("function");
    ORTokenElementType FUNCTOR = new ORTokenElementType("functor");
    ORTokenElementType GT = new ORTokenElementType(">");
    ORTokenElementType GT_OR_EQUAL = new ORTokenElementType(">=");
    ORTokenElementType IF = new ORTokenElementType("if");
    ORTokenElementType IN = new ORTokenElementType("in");
    ORTokenElementType INCLUDE = new ORTokenElementType("include");
    ORTokenElementType INHERIT = new ORTokenElementType("inherit");
    ORTokenElementType INITIALIZER = new ORTokenElementType("initializer");
    ORTokenElementType INT_VALUE = new ORTokenElementType("INT_VALUE");
    ORTokenElementType LAND = new ORTokenElementType("land");
    ORTokenElementType LARRAY = new ORTokenElementType("[|");
    ORTokenElementType LAZY = new ORTokenElementType("lazy");
    ORTokenElementType LBRACE = new ORTokenElementType("{");
    ORTokenElementType LBRACKET = new ORTokenElementType("[");
    ORTokenElementType LEFT_ARROW = new ORTokenElementType("<-");
    ORTokenElementType LET = new ORTokenElementType("let");
    ORTokenElementType LIDENT = new ORTokenElementType("LIDENT");
    ORTokenElementType LOR = new ORTokenElementType("lor");
    ORTokenElementType LPAREN = new ORTokenElementType("(");
    ORTokenElementType LSL = new ORTokenElementType("lsl");
    ORTokenElementType LSR = new ORTokenElementType("lsr");
    ORTokenElementType LT = new ORTokenElementType("<");
    ORTokenElementType LT_OR_EQUAL = new ORTokenElementType("<=");
    ORTokenElementType LXOR = new ORTokenElementType("lxor");
    ORTokenElementType L_AND = new ORTokenElementType("&&");
    ORTokenElementType L_OR = new ORTokenElementType("||");
    ORTokenElementType MATCH = new ORTokenElementType("match");
    ORTokenElementType METHOD = new ORTokenElementType("method");
    ORTokenElementType MINUS = new ORTokenElementType("-");
    ORTokenElementType MINUSDOT = new ORTokenElementType("-.");
    ORTokenElementType MOD = new ORTokenElementType("mod");
    ORTokenElementType MODULE = new ORTokenElementType("module");
    ORTokenElementType MULTI_COMMENT = new ORTokenElementType("MULTI_COMMENT");
    ORTokenElementType MUTABLE = new ORTokenElementType("mutable");
    ORTokenElementType NEW = new ORTokenElementType("new");
    ORTokenElementType NONE = new ORTokenElementType("None");
    ORTokenElementType NONREC = new ORTokenElementType("nonrec");
    ORTokenElementType NOT = new ORTokenElementType("not");
    ORTokenElementType NOT_EQ = new ORTokenElementType("!=");
    ORTokenElementType NOT_EQEQ = new ORTokenElementType("!==");
    ORTokenElementType OBJECT = new ORTokenElementType("object");
    ORTokenElementType OF = new ORTokenElementType("of");
    ORTokenElementType OPEN = new ORTokenElementType("open");
    ORTokenElementType OPTION = new ORTokenElementType("option");
    ORTokenElementType OP_STRUCT_DIFF = new ORTokenElementType("<>");
    ORTokenElementType OR = new ORTokenElementType("or");
    ORTokenElementType PERCENT = new ORTokenElementType("%");
    ORTokenElementType PIPE = new ORTokenElementType("|");
    ORTokenElementType PIPE_FORWARD = new ORTokenElementType("|>");
    ORTokenElementType PLUS = new ORTokenElementType("+");
    ORTokenElementType PLUSDOT = new ORTokenElementType("+.");
    ORTokenElementType POLY_VARIANT = new ORTokenElementType("POLY_VARIANT");
    ORTokenElementType PRI = new ORTokenElementType("pri");
    ORTokenElementType PRIVATE = new ORTokenElementType("private");
    ORTokenElementType PUB = new ORTokenElementType("pub");
    ORTokenElementType QUESTION_MARK = new ORTokenElementType("?");
    ORTokenElementType RAISE = new ORTokenElementType("raise");
    ORTokenElementType RARRAY = new ORTokenElementType("|]");
    ORTokenElementType RAW = new ORTokenElementType("raw");
    ORTokenElementType RBRACE = new ORTokenElementType("}");
    ORTokenElementType RBRACKET = new ORTokenElementType("]");
    ORTokenElementType REC = new ORTokenElementType("rec");
    ORTokenElementType REF = new ORTokenElementType("ref");
    ORTokenElementType RIGHT_ARROW = new ORTokenElementType("->");
    ORTokenElementType RPAREN = new ORTokenElementType(")");
    ORTokenElementType SEMI = new ORTokenElementType(";");
    ORTokenElementType SEMISEMI = new ORTokenElementType(";;");
    ORTokenElementType SHARP = new ORTokenElementType("#");
    ORTokenElementType SHARPSHARP = new ORTokenElementType("##");
    ORTokenElementType SHORTCUT = new ORTokenElementType("::");
    ORTokenElementType SIG = new ORTokenElementType("sig");
    ORTokenElementType SINGLE_COMMENT = new ORTokenElementType("SINGLE_COMMENT");
    ORTokenElementType SINGLE_QUOTE = new ORTokenElementType("'");
    ORTokenElementType SLASH = new ORTokenElementType("/");
    ORTokenElementType SLASHDOT = new ORTokenElementType("/.");
    ORTokenElementType SOME = new ORTokenElementType("Some");
    ORTokenElementType STAR = new ORTokenElementType("*");
    ORTokenElementType STARDOT = new ORTokenElementType("*.");
    ORTokenElementType STRING_VALUE = new ORTokenElementType("STRING_VALUE");
    ORTokenElementType STRUCT = new ORTokenElementType("struct");
    ORTokenElementType SWITCH = new ORTokenElementType("switch");
    ORTokenElementType TAG_AUTO_CLOSE = new ORTokenElementType("/>");
    ORTokenElementType TAG_LT_SLASH = new ORTokenElementType("</");
    ORTokenElementType THEN = new ORTokenElementType("then");
    ORTokenElementType TILDE = new ORTokenElementType("~");
    ORTokenElementType TO = new ORTokenElementType("to");
    ORTokenElementType TRY = new ORTokenElementType("try");
    ORTokenElementType TYPE = new ORTokenElementType("type");
    ORTokenElementType TYPE_ARGUMENT = new ORTokenElementType("TYPE_ARGUMENT");
    ORTokenElementType UIDENT = new ORTokenElementType("UIDENT");
    ORTokenElementType UNDERSCORE = new ORTokenElementType("_");
    ORTokenElementType UNIT = new ORTokenElementType("unit");
    ORTokenElementType VAL = new ORTokenElementType("val");
    ORTokenElementType VIRTUAL = new ORTokenElementType("virtual");
    ORTokenElementType WHEN = new ORTokenElementType("when");
    ORTokenElementType WHILE = new ORTokenElementType("while");
    ORTokenElementType WITH = new ORTokenElementType("with");

    // todo: handle properly (not in the lexer)
    ORTokenElementType PROPERTY_NAME = new ORTokenElementType("PROPERTY_NAME");
    ORTokenElementType VARIANT_NAME = new ORTokenElementType("VARIANT_NAME");
    ORTokenElementType DOUBLE_QUOTE = new ORTokenElementType("DOUBLE_QUOTE");
    ORTokenElementType TAG_NAME = new ORTokenElementType("TAG_NAME");
    ORTokenElementType TAG_LT = new ORTokenElementType("TAG_LT");
    ORTokenElementType TAG_GT = new ORTokenElementType("TAG_GT");
}
