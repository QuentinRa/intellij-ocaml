#
# Source: https://github.com/JetBrains/intellij-platform-plugin-template/blob/main/.github/workflows/build.yml
#  - removing a lot of unused code
#  - removing restrictions on versions
#  - using gradle build action
# License: https://github.com/JetBrains/intellij-platform-plugin-template/blob/main/LICENSE
#
# Note: https://github.com/marketplace/actions/qodana-scan

name: Build
on:
  # Trigger the workflow on pushes to only the 'main' branch (this avoids duplicate checks being run e.g. for dependabot pull requests)
  push:
    branches: [main]
  # Trigger the workflow on any pull request
  pull_request:

jobs:

  # Run Gradle Wrapper Validation Action to verify the wrapper's checksum
  # Run verifyPlugin, IntelliJ Plugin Verifier, and test Gradle tasks
  # Build plugin and provide the artifact for the next workflow jobs
  build:
    name: Build

    strategy:
      fail-fast: false
      matrix:
        os:
          # - macos-latest (mac is not supported)
          - ubuntu-latest
#          - windows-latest
        ocaml-compiler:
          - 4.05.x
          - 4.08.1
          - 4.13.x

    runs-on: ${{ matrix.os }}

    steps:

      # Check out current repository
      - name: Fetch Sources
        uses: actions/checkout@v2

      # Validate wrapper
      # https://github.com/gradle/wrapper-validation-action
      - name: Gradle Wrapper Validation
        uses: gradle/wrapper-validation-action@v1

      # Setup Java 11 environment for the next steps
      - name: Setup Java
        uses: actions/setup-java@v2
        with:
          distribution: zulu
          java-version: 11
          cache: gradle

      # Still not done by the action
      # https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      # https://github.com/ocaml/setup-ocaml
      - name: Setup Opam and OCaml ${{ matrix.ocaml-compiler }}
        uses: ocaml/setup-ocaml@v2
        with:
          ocaml-compiler: ${{ matrix.ocaml-compiler }}

      - name: Print Opam folder
        run: opam var -w | sed -nr 's/^root[[:space:]]*(.*)* #.*/\1/p'

      - name: Print OCaml folder
        run: opam var -w | sed -nr 's/^prefix[[:space:]]*(.*)*/\1/p'

      - name: See the current folder
        run: ls -l .

      # Run tests
      # https://github.com/gradle/gradle-build-action
      - name: Test with Gradle
        uses: gradle/gradle-build-action@v2
        with:
          arguments: test

      # Run Qodana inspections
      - name: Qodana - Code Inspection
        uses: JetBrains/qodana-action@v4.2.5