#
# Source: https://github.com/JetBrains/intellij-platform-plugin-template/blob/main/.github/workflows/build.yml
#  - removing a lot of unused code
#  - removing restrictions on versions
#  - using gradle build action
# License: https://github.com/JetBrains/intellij-platform-plugin-template/blob/main/LICENSE
#
# Note: https://github.com/marketplace/actions/qodana-scan

name: Build
on:
  # Trigger the workflow on pushes to only the 'main' branch (this avoids duplicate checks being run e.g. for dependabot pull requests)
  push:
    branches: [main]
  # Trigger the workflow on any pull request
  pull_request:

jobs:

  # Run Gradle Wrapper Validation Action to verify the wrapper's checksum
  # Run verifyPlugin, IntelliJ Plugin Verifier, and test Gradle tasks
  # Build plugin and provide the artifact for the next workflow jobs
  build:
    name: Build

    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
        ocaml-compiler:
          - 4.05.0
#          - 4.08.1
#          - 4.13.0

    runs-on: ${{ matrix.os }}

    steps:

      # Check out current repository
      - name: Fetch Sources
        uses: actions/checkout@v2

      # Validate wrapper
      # https://github.com/gradle/wrapper-validation-action
      - name: Gradle Wrapper Validation
        uses: gradle/wrapper-validation-action@v1

      # Setup Java 11 environment for the next steps
      - name: Setup Java
        uses: actions/setup-java@v2
        with:
          distribution: zulu
          java-version: 11
          cache: gradle

      # Still not done by the action
      # https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      # I'm not using https://github.com/ocaml/setup-ocaml,
      # because the switch is installed in an invalid location (a folder named _opam,
      # while I need a folder named after its ocaml version)
      - name: Use OCaml ${{ matrix.ocaml-compiler }}
        uses: ocaml/setup-ocaml@v2
        with:
          ocaml-compiler: ${{ matrix.ocaml-compiler }}

      - name: Move switch into the expected folder
        run: |
          mv /home/runner/work/intellij-ocaml/intellij-ocaml/_opam /home/runner/.opam/${{ matrix.ocaml-compiler }}
          's/\/home\/runner\/work\/intellij-ocaml\/intellij-ocaml\"/4.05.0\"\nswitch: \"${{ matrix.ocaml-compiler }}\"/g' /home/runner/.opam/config
          ls /home/runner/.opam/
          opam switch list

      # - run: sudo apt-get update && sudo apt-get upgrade && sudo apt-get install ocaml
      - name: Install ocaml binaries
        run: sudo apt-get install ocaml

      - run: ls -l /bin/ocaml
      - run: ls /home/runner/.opam/
      - run: opam switch list
      - run: cat /home/runner/.opam/config
      - run: opam config env
      - run: ls -l /home/runner/work/intellij-ocaml/intellij-ocaml/

#      - name: Install ocaml and opam
#        run: sudo apt-get update && sudo apt-get upgrade && sudo apt-get install opam && sudo apt-get install ocaml && opam init --auto-setup --bare
#
#      - name: Setup Opam and OCaml ${{ matrix.ocaml-compiler }}
#        run: opam switch create ocaml-base-compiler.${{ matrix.ocaml-compiler }}
#
#      - name: Move folder
#        run: mv ~/.opam/ocaml-base-compiler.${{ matrix.ocaml-compiler }} ~/.opam/${{ matrix.ocaml-compiler }} && sed 's/ocaml-base-compiler.${{ matrix.ocaml-compiler }}/${{ matrix.ocaml-compiler }}/g' ~/.opam/config
#
#      - name: Check
#        run: ls ~/.opam/

      # Run tests
      # https://github.com/gradle/gradle-build-action
#      - name: Test with Gradle
#        uses: gradle/gradle-build-action@v2
#        with:
#          arguments: test

      # Run Qodana inspections
#      - name: Qodana - Code Inspection
#        uses: JetBrains/qodana-action@v4.2.5