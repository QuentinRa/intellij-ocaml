#
# Localization Guide
# https://plugins.jetbrains.com/docs/intellij/localization-guide.html
#

# Project Wizard
project.wizard.title=OCaml {0, choice, 0#Project|1#Module}
project.wizard.instruction=It is recommended to use/install opam to enjoy most of the features of the plugin.
project.wizard.instruction.link=Install ocaml and opam
project.wizard.use.existing=Use or create an opam SDK
project.wizard.create.simple=Create an opam-like SDK
project.wizard.ocaml.binary=Ocaml binary
project.wizard.ocamlc.binary=Ocaml compiler binary
project.wizard.ocaml.version=Ocaml version
project.wizard.ocaml.sources=Sources
project.wizard.create.opam.warning.title=Opam SDK Warning
project.wizard.create.opam.warning.desc=It is not recommended creating an "opam-like" SDK from a real opam SDK. Consider directly using your opam SDK.
project.wizard.create.location=The new SDK will be stored in {0}.
project.wizard.module.prompt.sdk={0, choice, 0#Project|1#Module} SDK:
project.wizard.sdk.ocaml.version.empty=No OCaml version. Please, wait until we detect the version of ocaml.
project.wizard.sdk.create.failed=Could not create SDK. Check that we have access to {0}.
project.wizard.sdk.ocaml.binary.invalid.short=invalid ocaml location
project.wizard.sdk.ocaml.binary.help=A path ending with <code>/bin/ocaml</code>, <code>\\bin\\ocaml</code>, or <code>\\bin\\ocaml.exe</code>

# Templates
project.wizard.create.from.template=Create {0, choice, 0#project|1#module} from template
# Templates - Makefile
template.makefile.title=Simple application with a Makefile
template.makefile.description=Uses a Makefile to build your application. \
  Ensures that the command <code>make</code> is installed on the target machine. \
  Install the <b>Makefile plugin</b> from the marketplace. This may be used \
  in some cases, for simple applications, but you should look for autotools such as <b>Dune</b>.
# Templates - Dune
template.dune.title=Simple dune application
template.dune.description=Requires <b>opam</b>. According to the official website \
  "Dune is a build system for OCaml projects. Using it, you can build executables, libraries, run tests, and much more.".\
  <br><br>See <a href="https://dune.build/">https://dune.build/</a>

# Module
ocaml.module=OCaml Module
ocaml.module.description=OCaml is used for developing <b>OCaml-based</b> applications.
ocaml.project=OCaml project
ocaml.project.description=OCaml is used for developing <b>OCaml-based</b> applications.

# SDK
sdk.version.unknown=unknown
sdk.ask.configure=Please configure the OCaml SDK
sdk.data.manual=Manual
sdk.data.api=API
sdk.help.got.it.title=External link to the documentation
sdk.help.got.it.content=It's possible to change the link opened for this SDK in the settings.
# errors
sdk.home.error.invalid=Invalid location. Ensure that the folder is named after its OCaml version (ex: 4.05.0).
sdk.home.error.no.top.level=Top level not found. Check "/bin/ocaml" (and variants) failed.
sdk.home.error.no.compiler=Compiler not found. Check "/bin/ocamlc" (and variants) failed.
sdk.home.error.no.sources=Sources not found. Check "/lib/ocaml" failed.
sdk.home.error.no.provider=No provider could check this folder. Please fill a bug.

# Filetype
filetype.ml.description=OCaml file
filetype.mli.description=OCaml interface
filetype.annot.description=OCaml annot

# Actions
action.editor.repl.run.action=Run ''{0}'' in Console
action.editor.repl.run.action.text=Run File in Console
action.editor.repl.run.selection.action.text=Run Selection in Console
action.editor.api.action.text=API (external)
action.editor.help.action.text=Manual (external)

# REPL
repl.prompt.execute=<{0}> to execute
repl.connecting=Connecting to Console
repl.connecting.dots=Connecting to Console...
repl.error.running=Error Running REPL Console
repl.no.sdk=OCaml SDK not found
repl.run.command.no.sdk=Missing SDK
repl.run.command.no.sdk.info=The console is not available.
repl.no.started.title=Unable to execute action
repl.no.started.desc=Start the console manually first.
repl.select.a.statement=Select
repl.variable.view.show.title=Show Variables
repl.variable.view.show.desc=Shows console variables
repl.variable.view.show.group=Show Group ''{0}''
repl.variable.view.exceptions=Exceptions
repl.variable.view.modules=Modules
repl.variable.view.modules.type=Module types
repl.variable.view.types=Types
repl.variable.view.functions=Functions
repl.variable.view.variables=Variables

# Editor
editor.name=OCaml Editor
editor.no.expression.found=No expression found
ocaml.insight.warning.not.compiled=Please, wait until this file is compiled.\n\
  If the file was compiled, then this is a bug.
ocaml.insight.unknown.type=Unknown
## Annot editor
editor.annot.name=Preview
editor.annot.source.empty=empty file
editor.annot.annot.empty=No annotations
editor.annot.indicator.columns=Columns
editor.annot.indicator.line=Line
editor.annot.indicator.unknown=<unknown>
please.submit.an.issue=Please, open an issue on the GitHub repository... \
  Sorry for the inconvenience.

# External
jdk.combo.box.none.item=<None>