<idea-plugin>
    <id>ocaml</id>
    <name>OCaml</name>
    <vendor email="admin@lgs-games.com" url="https://github.com/memorize-code/ocaml-plugin-intellij">QuentinRa</vendor>
    <description><![CDATA[Based on the ReasonML, providing support of OCaml with native Ocaml binaries or opam, and without dune/esy/etc.]]></description>

    <depends optional="true" config-file="plugin-java.xml">com.intellij.modules.java</depends>

    <actions>
    </actions>

    <extensions defaultExtensionNs="com.intellij">
        <!--
         | File types
         -->
        <fileType extensions="mli" name="OCAML_INTF" fieldName="INSTANCE" language="OCaml"
                  implementationClass="com.reason.ide.files.OclInterfaceFileType"/>
        <fileType extensions="ml" name="OCAML" fieldName="INSTANCE" language="OCaml"
                  implementationClass="com.reason.ide.files.OclFileType"/>

        <!--
         | Templates
         -->
        <liveTemplateContext implementation="com.ocaml.ide.template.OCamlContentType"/>
        <liveTemplateContext implementation="com.ocaml.ide.template.OCamlContentType$OCamlExpressionTemplates"/>
        <liveTemplateContext implementation="com.ocaml.ide.template.OCamlContentType$OCamlCommentTemplates"/>
        <defaultLiveTemplates file="liveTemplates/OCaml.xml"/>

        <!--
         | SDK types
         -->
        <sdkType implementation="com.ocaml.ide.sdk.OCamlSdkType"/>
        <sdkDownload implementation="com.ocaml.ide.sdk.OCamlSdkType"/>

        <library.type implementation="com.ocaml.ide.sdk.library.OCamlLibraryType"/>

        <orderRootType implementation="com.ocaml.ide.sdk.sources.OCamlSourcesOrderRootType"
                       id="OCAML_SOURCES" order="FIRST"/>

        <!--
        | Parser
        -->
        <stubElementTypeHolder externalIdPrefix="OCaml." class="com.reason.lang.core.stub.OclStubBasedElementTypes"/>
        <lang.ast.factory language="OCaml" implementationClass="com.reason.lang.ocaml.OclASTFactory"/>
        <lang.parserDefinition language="OCaml" implementationClass="com.reason.lang.ocaml.OclParserDefinition"/>
        <lang.parserDefinition language="OCaml" implementationClass="com.reason.lang.ocaml.OclParserDefinition"/>
        <lang.syntaxHighlighterFactory language="OCaml"
                                       implementationClass="com.ocaml.ide.highlight.OclSyntaxHighlighterFactory"/>
        <projectService serviceImplementation="com.reason.lang.core.psi.reference.ORElementResolver"/>
        <lang.elementManipulator forClass="com.reason.lang.core.psi.PsiLiteralExpression"
                                 implementationClass="com.reason.lang.core.LiteralStringManipulator"/>

        <!--
         | OCaml module builder
         -->
        <moduleType id="ocamlModuleType" implementationClass="com.ocaml.ide.modules.OCamlModuleType"/>
        <moduleBuilder builderClass="com.ocaml.ide.modules.OCamlModuleBuilder"/>

        <!--
         | OCaml Settings
         -->
        <projectService serviceImplementation="com.ocaml.ide.settings.ORSettings"/>
        <projectConfigurable id="settings.ocaml" groupId="language" displayName="OCaml"
                             instance="com.ocaml.ide.settings.ORSettingsConfigurable"/>
        <colorSettingsPage implementation="com.ocaml.ide.settings.ORColorSettingsPage"/>

        <!--
        | REPL
        -->
        <toolWindow factoryClass="com.ocaml.ide.console.OCamlConsoleToolWindowFactory" id="ocaml" anchor="bottom"/>
        <scratch.rootType implementation="com.ocaml.ide.console.OCamlConsoleRootType"/>

        <!--
        | Run
        -->
        <configurationType implementation="com.ocaml.ide.sdk.runConfiguration.OCamlcRunConfigurationType"/>
        <projectTaskRunner implementation="com.ocaml.ide.sdk.buildTool.OCamlBuildTaskRunner"/>
        <programRunner implementation="com.ocaml.ide.sdk.buildTool.OCamlcCommandRunner"/>

        <!--
        | Services
        -->
        <projectService serviceImplementation="com.ocaml.comp.opam.OpamService"/>

        <!--
        | Notifications
        -->
        <notificationGroup id="OCaml Plugin" displayType="BALLOON"/>
        <notificationGroup id="OCaml Build Log" displayType="NONE"/>

        <!--
        | Features
        -->
        <lang.commenter language="OCaml" implementationClass="com.reason.ide.comment.OclCommenter"/>
        <lang.braceMatcher language="OCaml" implementationClass="com.reason.ide.match.OclPairedBraceMatcher"/>

        <!--
         | Search / navigating
         -->
        <stubIndex implementation="com.reason.ide.search.index.ModuleTopLevelIndex"/>
        <stubIndex implementation="com.reason.ide.search.index.ModuleComponentFqnIndex"/>
        <stubIndex implementation="com.reason.ide.search.index.ModuleComponentIndex"/>
        <stubIndex implementation="com.reason.ide.search.index.ModuleFqnIndex"/>
        <stubIndex implementation="com.reason.ide.search.index.ModuleIndex"/>
        <stubIndex implementation="com.reason.ide.search.index.ModuleAliasedIndex"/>
        <stubIndex implementation="com.reason.ide.search.index.ModuleAliasesIndex"/>
        <stubIndex implementation="com.reason.ide.search.index.KlassFqnIndex"/>
        <stubIndex implementation="com.reason.ide.search.index.LetIndex"/>
        <stubIndex implementation="com.reason.ide.search.index.LetFqnIndex"/>
        <stubIndex implementation="com.reason.ide.search.index.ValIndex"/>
        <stubIndex implementation="com.reason.ide.search.index.ValFqnIndex"/>
        <stubIndex implementation="com.reason.ide.search.index.TypeIndex"/>
        <stubIndex implementation="com.reason.ide.search.index.TypeFqnIndex"/>
        <stubIndex implementation="com.reason.ide.search.index.ExternalIndex"/>
        <stubIndex implementation="com.reason.ide.search.index.ExternalFqnIndex"/>
        <stubIndex implementation="com.reason.ide.search.index.VariantIndex"/>
        <stubIndex implementation="com.reason.ide.search.index.VariantFqnIndex"/>
        <stubIndex implementation="com.reason.ide.search.index.ExceptionIndex"/>
        <stubIndex implementation="com.reason.ide.search.index.ExceptionFqnIndex"/>
        <stubIndex implementation="com.reason.ide.search.index.RecordFieldIndex"/>
        <stubIndex implementation="com.reason.ide.search.index.ObjectFieldIndex"/>
        <stubIndex implementation="com.reason.ide.search.index.ParameterIndex"/>
        <stubIndex implementation="com.reason.ide.search.index.ParameterFqnIndex"/>
        <stubIndex implementation="com.reason.ide.search.index.IncludeIndex"/>
        <stubIndex implementation="com.reason.ide.search.index.OpenIndex"/>

        <fileBasedIndex implementation="com.reason.ide.search.index.FileModuleIndex"/>
        <fileBasedIndex implementation="com.reason.ide.search.index.NamespaceIndex"/>
        <applicationService serviceImplementation="com.reason.ide.search.FileModuleIndexService"/>

        <projectService serviceImplementation="com.reason.ide.search.PsiFinder"/>

        <lang.findUsagesProvider language="OCaml" implementationClass="com.reason.ide.search.OclFindUsagesProvider"/>
    </extensions>

</idea-plugin>
